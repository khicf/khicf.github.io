generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Event {
  id              Int     @id @default(autoincrement())
  title           String
  date            String
  time            String?
  description     String
  location        String?
  contact         String?
  fullDescription String?
}

model Prayer {
  id       Int       @id @default(autoincrement())
  request  String
  author   String?
  date     String
  isPublic Boolean   @default(true)
  comments Comment[]
}

model Comment {
  id       Int     @id @default(autoincrement())
  text     String
  author   String?
  date     String
  prayerId Int
  prayer   Prayer  @relation(fields: [prayerId], references: [id])
}

model Scripture {
  id        Int    @id @default(autoincrement())
  passage   String
  reference String
  author    String
  date      String
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String         @id @default(cuid())
  name          String?
  email         String?        @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          Role           @default(USER)
  accounts      Account[]
  appreciations Appreciation[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Appreciation {
  id        Int      @id @default(autoincrement())
  message   String
  createdAt DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Role {
  USER
  ADMIN
}
